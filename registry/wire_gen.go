// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package registry

import (
	"lifegame/infrastructure/persistence/postgre"
	"lifegame/presenter/http/handler"
	"lifegame/presenter/http/middleware"
	"lifegame/usecase"
)

// Injectors from wire.go:

func InitializeAuth() middleware.Middleware {
	sqlHandler := postgre.NewSQLHandler()
	userRepository := postgre.NewUserRepositoryImpl(sqlHandler)
	userUseCase := usecase.NewUserUseCase(userRepository)
	middlewareMiddleware := middleware.NewMiddleware(userUseCase)
	return middlewareMiddleware
}

func InitializeUserHandler() handler.UserHandler {
	sqlHandler := postgre.NewSQLHandler()
	userRepository := postgre.NewUserRepositoryImpl(sqlHandler)
	userUseCase := usecase.NewUserUseCase(userRepository)
	userHandler := handler.NewUserHandler(userUseCase)
	return userHandler
}

func InitializeLifeModelHandler() handler.LifeModelHandler {
	sqlHandler := postgre.NewSQLHandler()
	lifeModelRepository := postgre.NewLifeModelRepositoryImpl(sqlHandler)
	userRepository := postgre.NewUserRepositoryImpl(sqlHandler)
	lifeModelUseCase := usecase.NewLifeModelUseCase(lifeModelRepository, userRepository)
	lifeModelHandler := handler.NewLifeModelHandler(lifeModelUseCase)
	return lifeModelHandler
}
